{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createApp } from 'vue';\nimport { createRouter } from 'vue-router';\nimport App from './App.vue';\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { getCurDate, setSessionStorage, getSessionStorage, removeSessionStorage, setLocalStorage, getLocalStorage, removeLocalStorage } from './common.js';\nVue.config.productionTip = false;\n\n//设置axios的基础url部分\naxios.defaults.baseURL = 'http://localhost:8080/elm/';\n//将axios挂载到vue实例上，使用vue时就可以 this.$axios 这样使用了\nVue.prototype.$axios = axios; //axios成为vue对象的一个组成部分\n\nVue.prototype.$qs = qs;\nVue.prototype.$getCurDate = getCurDate;\nVue.prototype.$setSessionStorage = setSessionStorage;\nVue.prototype.$getSessionStorage = getSessionStorage;\nVue.prototype.$removeSessionStorage = removeSessionStorage;\nVue.prototype.$setLocalStorage = setLocalStorage;\nVue.prototype.$getLocalStorage = getLocalStorage;\nVue.prototype.$removeLocalStorage = removeLocalStorage;\n\n//路由守卫 每次路由之前进行拦截并处理\nrouter.beforeEach(function (to, from, next) {\n  let user = sessionStorage.getItem('user');\n  //除了登录、注册、首页、商家列表、商家信息之外，都需要判断是否登录\n  if (!(to.path == '/' || to.path == '/index' || to.path == '/businessList' || to.path == '/businessInfo' || to.path == '/login' || to.path == '/register')) {\n    //to.path=='/'为根路径或默认首页\n    if (user == null) {\n      router.push('/login'); //强制登陆\n      location.reload(); //刷新\n    }\n  }\n\n  next();\n});\n\n// 创建根 Vue 应用\nconst app = createApp(App);\n\n// 在根 Vue 实例中挂载路由\napp.use(router);\n\n// 挂载根组件\napp.mount('#app');","map":{"version":3,"names":["createApp","createRouter","App","axios","qs","getCurDate","setSessionStorage","getSessionStorage","removeSessionStorage","setLocalStorage","getLocalStorage","removeLocalStorage","Vue","config","productionTip","defaults","baseURL","prototype","$axios","$qs","$getCurDate","$setSessionStorage","$getSessionStorage","$removeSessionStorage","$setLocalStorage","$getLocalStorage","$removeLocalStorage","router","beforeEach","to","from","next","user","sessionStorage","getItem","path","push","location","reload","app","use","mount"],"sources":["D:/myvue/elmclient/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport { createRouter } from 'vue-router';\nimport App from './App.vue';\n\nimport 'font-awesome/css/font-awesome.min.css'\nimport axios from 'axios'\nimport qs from 'qs'\nimport {\n    getCurDate,\n    setSessionStorage,\n    getSessionStorage,\n    removeSessionStorage,\n    setLocalStorage,\n    getLocalStorage,\n    removeLocalStorage\n} from './common.js'\n\nVue.config.productionTip = false\n\n//设置axios的基础url部分\naxios.defaults.baseURL = 'http://localhost:8080/elm/';\n//将axios挂载到vue实例上，使用vue时就可以 this.$axios 这样使用了\nVue.prototype.$axios = axios; //axios成为vue对象的一个组成部分\n\nVue.prototype.$qs = qs;\n\nVue.prototype.$getCurDate = getCurDate;\nVue.prototype.$setSessionStorage = setSessionStorage;\nVue.prototype.$getSessionStorage = getSessionStorage;\nVue.prototype.$removeSessionStorage = removeSessionStorage;\nVue.prototype.$setLocalStorage = setLocalStorage;\nVue.prototype.$getLocalStorage = getLocalStorage;\nVue.prototype.$removeLocalStorage = removeLocalStorage;\n\n//路由守卫 每次路由之前进行拦截并处理\nrouter.beforeEach(function(to,from,next){\n    let user = sessionStorage.getItem('user');\n    //除了登录、注册、首页、商家列表、商家信息之外，都需要判断是否登录\n    if(!(to.path=='/'||to.path=='/index'||to.path=='/businessList'||to.path=='/businessInfo'||to.path=='/login'||to.path=='/register'))\n\t{  //to.path=='/'为根路径或默认首页\n        if(user==null){\n            router.push('/login');//强制登陆\n            location.reload();//刷新\n\t\t}\n    }\n    next();\n});\n\n// 创建根 Vue 应用\nconst app = createApp(App);\n\n// 在根 Vue 实例中挂载路由\napp.use(router);\n\n// 挂载根组件\napp.mount('#app');"],"mappings":";AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,GAAG,MAAM,WAAW;AAE3B,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AACnB,SACIC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,oBAAoB,EACpBC,eAAe,EACfC,eAAe,EACfC,kBAAkB,QACf,aAAa;AAEpBC,GAAG,CAACC,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;AACAX,KAAK,CAACY,QAAQ,CAACC,OAAO,GAAG,4BAA4B;AACrD;AACAJ,GAAG,CAACK,SAAS,CAACC,MAAM,GAAGf,KAAK,CAAC,CAAC;;AAE9BS,GAAG,CAACK,SAAS,CAACE,GAAG,GAAGf,EAAE;AAEtBQ,GAAG,CAACK,SAAS,CAACG,WAAW,GAAGf,UAAU;AACtCO,GAAG,CAACK,SAAS,CAACI,kBAAkB,GAAGf,iBAAiB;AACpDM,GAAG,CAACK,SAAS,CAACK,kBAAkB,GAAGf,iBAAiB;AACpDK,GAAG,CAACK,SAAS,CAACM,qBAAqB,GAAGf,oBAAoB;AAC1DI,GAAG,CAACK,SAAS,CAACO,gBAAgB,GAAGf,eAAe;AAChDG,GAAG,CAACK,SAAS,CAACQ,gBAAgB,GAAGf,eAAe;AAChDE,GAAG,CAACK,SAAS,CAACS,mBAAmB,GAAGf,kBAAkB;;AAEtD;AACAgB,MAAM,CAACC,UAAU,CAAC,UAASC,EAAE,EAACC,IAAI,EAACC,IAAI,EAAC;EACpC,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC;EACA,IAAG,EAAEL,EAAE,CAACM,IAAI,IAAE,GAAG,IAAEN,EAAE,CAACM,IAAI,IAAE,QAAQ,IAAEN,EAAE,CAACM,IAAI,IAAE,eAAe,IAAEN,EAAE,CAACM,IAAI,IAAE,eAAe,IAAEN,EAAE,CAACM,IAAI,IAAE,QAAQ,IAAEN,EAAE,CAACM,IAAI,IAAE,WAAW,CAAC,EACrI;IAAG;IACI,IAAGH,IAAI,IAAE,IAAI,EAAC;MACVL,MAAM,CAACS,IAAI,CAAC,QAAQ,CAAC,CAAC;MACtBC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC;IAC5B;EACE;;EACAP,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;;AAEF;AACA,MAAMQ,GAAG,GAAGvC,SAAS,CAACE,GAAG,CAAC;;AAE1B;AACAqC,GAAG,CAACC,GAAG,CAACb,MAAM,CAAC;;AAEf;AACAY,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}