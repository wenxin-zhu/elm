{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createApp } from 'vue'; // 导入 createApp 函数\nimport App from './App.vue'; // 导入根组件\nimport router from './router';\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { getCurDate, setSessionStorage, getSessionStorage, removeSessionStorage, setLocalStorage, getLocalStorage, removeLocalStorage } from './common.js';\nconst app = createApp(App); // 创建 Vue 应用实例\n\napp.config.productionTip = false;\n\n// 设置 axios 的基础 url 部分\naxios.defaults.baseURL = 'http://localhost:8080/elm/';\n\n// 将 axios 挂载到 vue 实例上\napp.config.globalProperties.$axios = axios;\n\n// 将 qs 挂载到 vue 实例上\napp.config.globalProperties.$qs = qs;\n\n// 将一些方法挂载到 vue 实例上\napp.config.globalProperties.$getCurDate = getCurDate;\napp.config.globalProperties.$setSessionStorage = setSessionStorage;\napp.config.globalProperties.$getSessionStorage = getSessionStorage;\napp.config.globalProperties.$removeSessionStorage = removeSessionStorage;\napp.config.globalProperties.$setLocalStorage = setLocalStorage;\napp.config.globalProperties.$getLocalStorage = getLocalStorage;\napp.config.globalProperties.$removeLocalStorage = removeLocalStorage;\n\n// 路由守卫 每次路由之前进行拦截并处理\nrouter.beforeEach((to, from, next) => {\n  let user = sessionStorage.getItem('user');\n  // 除了登录、注册、首页、商家列表、商家信息之外，都需要判断是否登录\n  if (!(to.path == '/' || to.path == '/index' || to.path == '/businessList' || to.path == '/businessInfo' || to.path == '/login' || to.path == '/register')) {\n    if (user == null) {\n      router.push('/login'); // 强制登陆\n      location.reload(); // 刷新\n    }\n  }\n\n  next();\n});\napp.use(router); // 安装路由\napp.mount('#app'); // 挂载根组件到 DOM","map":{"version":3,"names":["createApp","App","router","axios","qs","getCurDate","setSessionStorage","getSessionStorage","removeSessionStorage","setLocalStorage","getLocalStorage","removeLocalStorage","app","config","productionTip","defaults","baseURL","globalProperties","$axios","$qs","$getCurDate","$setSessionStorage","$getSessionStorage","$removeSessionStorage","$setLocalStorage","$getLocalStorage","$removeLocalStorage","beforeEach","to","from","next","user","sessionStorage","getItem","path","push","location","reload","use","mount"],"sources":["D:/myvue/elmclient/src/main.js"],"sourcesContent":["import { createApp } from 'vue'; // 导入 createApp 函数\nimport App from './App.vue'; // 导入根组件\nimport router from './router';\r\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport axios from 'axios';\nimport qs from 'qs';\nimport {\n  getCurDate,\n  setSessionStorage,\n  getSessionStorage,\n  removeSessionStorage,\n  setLocalStorage,\n  getLocalStorage,\n  removeLocalStorage\n} from './common.js';\n\nconst app = createApp(App); // 创建 Vue 应用实例\n\napp.config.productionTip = false;\n\n// 设置 axios 的基础 url 部分\naxios.defaults.baseURL = 'http://localhost:8080/elm/';\n\n// 将 axios 挂载到 vue 实例上\napp.config.globalProperties.$axios = axios;\n\n// 将 qs 挂载到 vue 实例上\napp.config.globalProperties.$qs = qs;\n\n// 将一些方法挂载到 vue 实例上\napp.config.globalProperties.$getCurDate = getCurDate;\napp.config.globalProperties.$setSessionStorage = setSessionStorage;\napp.config.globalProperties.$getSessionStorage = getSessionStorage;\napp.config.globalProperties.$removeSessionStorage = removeSessionStorage;\napp.config.globalProperties.$setLocalStorage = setLocalStorage;\napp.config.globalProperties.$getLocalStorage = getLocalStorage;\napp.config.globalProperties.$removeLocalStorage = removeLocalStorage;\n\n// 路由守卫 每次路由之前进行拦截并处理\nrouter.beforeEach((to, from, next) => {\n  let user = sessionStorage.getItem('user');\n  // 除了登录、注册、首页、商家列表、商家信息之外，都需要判断是否登录\n  if (\n    !(\n      to.path == '/' ||\n      to.path == '/index' ||\n      to.path == '/businessList' ||\n      to.path == '/businessInfo' ||\n      to.path == '/login' ||\n      to.path == '/register'\n    )\n  ) {\n    if (user == null) {\n      router.push('/login'); // 强制登陆\n      location.reload(); // 刷新\n    }\n  }\n  next();\n});\n\napp.use(router); // 安装路由\napp.mount('#app'); // 挂载根组件到 DOM\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,KAAK,CAAC,CAAC;AACjC,OAAOC,GAAG,MAAM,WAAW,CAAC,CAAC;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,IAAI;AACnB,SACEC,UAAU,EACVC,iBAAiB,EACjBC,iBAAiB,EACjBC,oBAAoB,EACpBC,eAAe,EACfC,eAAe,EACfC,kBAAkB,QACb,aAAa;AAEpB,MAAMC,GAAG,GAAGZ,SAAS,CAACC,GAAG,CAAC,CAAC,CAAC;;AAE5BW,GAAG,CAACC,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;AACAX,KAAK,CAACY,QAAQ,CAACC,OAAO,GAAG,4BAA4B;;AAErD;AACAJ,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACC,MAAM,GAAGf,KAAK;;AAE1C;AACAS,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACE,GAAG,GAAGf,EAAE;;AAEpC;AACAQ,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACG,WAAW,GAAGf,UAAU;AACpDO,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACI,kBAAkB,GAAGf,iBAAiB;AAClEM,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACK,kBAAkB,GAAGf,iBAAiB;AAClEK,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACM,qBAAqB,GAAGf,oBAAoB;AACxEI,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACO,gBAAgB,GAAGf,eAAe;AAC9DG,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACQ,gBAAgB,GAAGf,eAAe;AAC9DE,GAAG,CAACC,MAAM,CAACI,gBAAgB,CAACS,mBAAmB,GAAGf,kBAAkB;;AAEpE;AACAT,MAAM,CAACyB,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC;EACA,IACE,EACEL,EAAE,CAACM,IAAI,IAAI,GAAG,IACdN,EAAE,CAACM,IAAI,IAAI,QAAQ,IACnBN,EAAE,CAACM,IAAI,IAAI,eAAe,IAC1BN,EAAE,CAACM,IAAI,IAAI,eAAe,IAC1BN,EAAE,CAACM,IAAI,IAAI,QAAQ,IACnBN,EAAE,CAACM,IAAI,IAAI,WAAW,CACvB,EACD;IACA,IAAIH,IAAI,IAAI,IAAI,EAAE;MAChB7B,MAAM,CAACiC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;MACvBC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB;EACF;;EACAP,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEFlB,GAAG,CAAC0B,GAAG,CAACpC,MAAM,CAAC,CAAC,CAAC;AACjBU,GAAG,CAAC2B,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}